// App.js
import React, { useEffect, useState } from 'react';

function App() {
  const [students, setStudents] = useState([]);
  const [loading, setLoading] = useState(true);
  const [name, setName] = useState('');
  const [age, setAge] = useState('');

  // Fetch students from the backend
  useEffect(() => {
    fetch('http://localhost:5000/api/students')
      .then(res => res.json())
      .then(data => {
        setStudents(data);
        setLoading(false);
      })
      .catch(err => {
        console.error('Error fetching students:', err);
        setLoading(false);
      });
  }, []);

  // Add a new student
  const handleSubmit = (e) => {
    e.preventDefault();
    fetch('http://localhost:5000/api/students', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ name, age: parseInt(age) })
    })
      .then(res => res.json())
      .then(newStudent => {
        setStudents([...students, newStudent]);
        setName('');
        setAge('');
      })
      .catch(err => console.error('Error adding student:', err));
  };

  // Basic styles
  const styles = {
    container: {
      fontFamily: 'Arial, sans-serif',
      textAlign: 'center',
      padding: '20px',
      maxWidth: '500px',
      margin: '0 auto'
    },
    form: {
      marginBottom: '20px'
    },
    input: {
      padding: '8px',
      margin: '5px',
      width: 'calc(50% - 10px)'
    },
    button: {
      padding: '8px 16px',
      backgroundColor: '#28a745',
      color: '#fff',
      border: 'none',
      cursor: 'pointer'
    },
    list: {
      listStyle: 'none',
      padding: 0
    },
    listItem: {
      background: '#f4f4f4',
      margin: '8px 0',
      padding: '10px',
      borderRadius: '4px'
    }
  };

  return (
    <div style={styles.container}>
      <h1>Student Directory</h1>

      <form onSubmit={handleSubmit} style={styles.form}>
        <input
          type="text"
          placeholder="Student Name"
          value={name}
          onChange={(e) => setName(e.target.value)}
          required
          style={styles.input}
        />
        <input
          type="number"
          placeholder="Age"
          value={age}
          onChange={(e) => setAge(e.target.value)}
          required
          style={styles.input}
        />
        <br />
        <button type="submit" style={styles.button}>Add Student</button>
      </form>

      {loading ? (
        <p>Loading students...</p>
      ) : (
        <ul style={styles.list}>
          {students.map((student) => (
            <li key={student.id} style={styles.listItem}>
              {student.name} â€” Age: {student.age}
            </li>
          ))}
        </ul>
      )}
    </div>
  );
}

export default App;
